## Build Pipeline - Build, publish container image, and update helmfile config
resources:
  repositories:
    - repository: templates
      type: github
      endpoint: spydersoft-gh
      name: spydersoft-consulting/azure-devops-templates
    - repository: helmfileconfig
      type: github
      endpoint: spyder007
      name: spyder007/id-helm-config

trigger:
  tags:
    include:
    - "*"
  branches:
    include:
      - main
      - feature/*
  paths:
    exclude:
      - README.md

pr:
- main


extends:
  template: pipelines/build-api/v1.yml@templates
  parameters:
    gitVersionSpec: '6.0.x'
    buildProject: source/Spydersoft.Identity.sln
    publishProject: src/Spydersoft.TechRadar.Data.Api.csproj
    netCoreVersion: '9.0.x'
    artifactName: identityServer
    artifactZipName: Spydersoft.Identity
    dockerImageName: spyder007/identity_server
    dockerFilePath: Dockerfile.simple
    containerRegistryName: github-spydersoft-docker
    imageTagVariableName: identity_server
    helmfileRepoName: helmfileconfig
    externalFeedCredentials: SpydersoftGithub
    #if it's a PR or build from main, don't update helmfile config or build/publish docker image
    ${{ if or(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranchName'], 'main')) }}:
      updateHelmConfig: false
      buildAndPublishDockerImage: false
      executeSonar: true
    ${{ else }}:
      updateHelmConfig: true
      buildAndPublishDockerImage: true
      executeSonar: false
    sonarEndpointName: sonarcloud-spydersoft
    sonarProjectKey: spyder007_identity_server
    sonarProjectName: identity_server
    executeTests: true
    testProjects: '**/*.Tests/*.csproj'
    useSonarCloud: true
    sonarCloudOrganization: spydersoft-mjg
    prebuildSteps:
      - task: Npm@1
        displayName: NPM Install
        inputs:
          workingDir: $(Build.SourcesDirectory)/source/Spydersoft.Identity
          command: install
      - task: CmdLine@2
        displayName: 'Gulp Install'
        inputs:
          script: 'npm install gulp' 
          workingDirectory: $(Build.SourcesDirectory)/source/Spydersoft.Identity
      - task: CmdLine@2
        displayName: 'Gulp Build'
        inputs:
          script: 'gulp'
          workingDirectory: $(Build.SourcesDirectory)/source/Spydersoft.Identity
