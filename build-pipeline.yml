variables:
  - group: helm-repository
  - name: DOCKER_BUILDKIT
    value: 1
  - name: BUILD_CONFIGURATION
    value: "Release"
  - name: dockerImageName
    value: spydersoft/identity/identity_server
  - name: containerRegistryName
    value: proget_docker
  - name: containerRegistryUrl
    value: proget.mattgerega.com
  - name: dockerImageFileName
    value: identity_server 
  
trigger:
  branches:
    include:
      - master
      - feature/*
  paths:
    exclude:
      - README.md

stages:
- stage: Build
  jobs:
  - job: BuildJob
    pool:
      name: Default
      demands: agent.os -equals Linux
    steps:
    - template: templates/dotnet-build-steps.yml
    # this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your pipeline.
    - publish: '$(Build.ArtifactStagingDirectory)' 
      artifact: 'identityServer'

        
- stage: docker_and_test
  jobs:
  - job: create_docker_image_and_test
    timeoutInMinutes: 90
    pool:
      name: Default
      demands: agent.os -equals Linux
    steps:
    - template: templates/docker-image-steps.yml
      parameters:
        dockerImageName: $(dockerImageName)
        containerRegistryName: $(containerRegistryName)
        containerRegistryUrl: $(containerRegistryUrl)
        artifactName: 'identityServer'
        dockerImageFileName: $(dockerImageFileName)

- stage: helm_publish
  jobs:
  - job: create_helm_chart_and_publish
    pool:
      name: Default
      demands: agent.os -equals Linux
    steps:
    - task: CmdLine@2
      inputs:
        script: |
         helm package . --app-version $(fullSemVer) --version $(fullSemVer)
         curl $(helm_repository_url) --user $(helm_username):$(helm_password) --upload-file identity-server-$(fullSemVer).tgz
        workingDirectory: $(Build.SourcesDirectory)/charts/identity-server


## TODO: If "master" create release in octopus